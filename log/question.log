質問内容(reset HEAD)

******git reset HEAD を実行しても、ステージングに追加された（add実行後）ものの取り消しができない******
PC_User@DESKTOP-2CQ9D5E MINGW64 ~/desktop/Git_Work/Work_Samurai (master)
$ echo "staging後の取り消し" >> checkout.log

PC_User@DESKTOP-2CQ9D5E MINGW64 ~/desktop/Git_Work/Work_Samurai (master)
$ git add .

PC_User@DESKTOP-2CQ9D5E MINGW64 ~/desktop/Git_Work/Work_Samurai (master)
$ git reset checkout.log
Unstaged changes after reset:
M       checkout.log

PC_User@DESKTOP-2CQ9D5E MINGW64 ~/desktop/Git_Work/Work_Samurai (master)
$ cat checkout.log
ファイルの変更の取り消しコマンド
ステージングの段階
ステージングの段階の取り消し
staging後の取り消し

*************************************************************************
***以下git reset HEAD　のみで実行                                      ***
***結果うまくいかず                                                    ***
*************************************************************************
PC_User@DESKTOP-2CQ9D5E MINGW64 ~/desktop/git_work/Work_Samurai (master)
$ echo "git resetのやり直し" >> README.md                                                                               
PC_User@DESKTOP-2CQ9D5E MINGW64 ~/desktop/git_work/Work_Samurai (master)
$ cat README.md                                                                                                         # テキストの課題や練習を行うリポジトリ
Git　README.mdに自動入力

2020/04/09より追記
5章ファイルの変更を取り消そう
#commit testgit resetのやり直し

PC_User@DESKTOP-2CQ9D5E MINGW64 ~/desktop/git_work/Work_Samurai (master)
$ git add .

PC_User@DESKTOP-2CQ9D5E MINGW64 ~/desktop/git_work/Work_Samurai (master)
$ git reset HEAD
Unstaged changes after reset:
M       README.md

PC_User@DESKTOP-2CQ9D5E MINGW64 ~/desktop/git_work/Work_Samurai (master)
$ cat README.md
# テキストの課題や練習を行うリポジトリ
Git　README.mdに自動入力

2020/04/09より追記
5章ファイルの変更を取り消そう
#commit testgit resetのやり直し

*************************************************************************
<<<<<<質問回答>>>>>>
*************************************************************************
git checkout
git reset
上記に種類は変更を取り消す際の参照箇所と取り消し箇所が異なる

git checkout
こちらはローカル環境で直接自分が作業する場所(work tree)
が変更取り消し箇所
参照は、git add した時の staging を参照している。

だから cat コマンドで実ファイルに記載されている内容を確認したら
変更されていることが確認できる。
(cat コマンドはBashコマンドで、gitに関する項目を確認するのではない)

git reset
こちらは git add 後の staging に対して変更取り消しを行う
参照は commit 後のローカルリポジトリ
つまり work tree (自分が実際に作業できる箇所)には影響はない。
cat コマンドを実行しても以前と変更が見られないのは当然

変化を確認したいのであれば、
git status
などで確認すること
